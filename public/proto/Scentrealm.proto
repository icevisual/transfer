package Proto2.Scentrealm;
// 1. 分辨多种云平台
// 他云接入，我方进行消息流转，需要一个消息中转
// 我方有一数据库，记录设备、控制器的身份信息
// 当前通过EMQ本身的订阅系统做流转
// 应有另一种人工介入的流转方式，需指明
// 但又要保证用户端的统一化（最好不需设置多余参数）
// 希望利用到ENQ本身的消息流转，接入设备请求时返回 目标Topic？
// 授权接口需要人工介入（介入端为PHP）
// 请求设备资源也需要
// 这就意味着要用PHP长连接EQM

// 
enum SrRouteType
{
    // req： 控制设备 -> 服务器
    SRT_req_auth = 1; // 登录
    SRT_req_connect = 2; // 连接设备
    SRT_req_sendData = 3; // 控制设备发送数据给服务器

    // resp：服务器 -> 控制设备
    SRT_resp_auth = 4;// 登录
    SRT_resp_connect = 5;  // 连接设备
    SRT_resp_sendData = 6;

    // push：设备 -> 服务器 -> 控制设备
    SRT_push_recvData = 7; 
}
enum SrCmdId
{
    SCI_req_auth = 1; // 授权 
    SCI_req_connect = 2; // 连接设备
    SCI_req_mac = 3; // 获取设备MAC地址
    SCI_req_uptime = 4; // 获取设备开机时间
    SCI_req_downtime = 5; // 获取上次关机时间
    SCI_req_sleep = 6; // 主机休眠
    SCI_req_wakeup = 7; // 唤醒主机
    SCI_req_usedSeconds = 8; // 获取瓶子使用总时间（秒）
    SCI_req_enableSmell = 9; // 开启某个气味
    SCI_req_playSmell = 10; // 播放气味

    // resp：服务器 -> 控制设备
    SCI_resp_auth = 11;// 登录
    SCI_resp_connect = 12;  // 连接设备
    // push：设备 -> 服务器 -> 控制设备
    SCI_push_recvData = 13; 
}


// 相对，什么时候开始，怎么播放（播几秒，循环）
// 考虑多个动作组合整个过程
// 播放的场景
//    不循环
//        过几秒，播放几秒
//        具体时间，播放几秒
//    循环，参考crontab
//        次数循环
//        时间循环
//            每周循环，每月
enum SrErrorCode
{
    SEC_success = 0;// 没错误
    SEC_error = -1; // 通用的错误
    SEC_unAuth = -2; // 设备未登录
    SEC_sessionTimeout = -3; // session 超时，需要重新登录
    SEC_protoDecode = -4; // proto 解码失败
    SEC_aesDecode = -5; // AES 解码失败
    SEC_sign = -6; // 验签失败
    SEC_deviceBlock = -7; // 设备被占用
    SEC_maxReqInQueue = -8; // 设备发送了多个请求，并且没有收到回包。请求队列拥塞。
    SEC_deviceUnavailable = -9; // 设备宕机
    SEC_serverUnavailable = -10; // 服务器宕机
    SEC_deviceUnconnected = -11; // 设备未连接
}

// 请求发送方类别
enum SrSenderType
{
    SST_controller = 1;// 控制器
    SST_device = 2;// 设备
}

// TODO 兼容设备、蓝牙
message BaseRequest {
    optional SrSenderType sender = 1  [default = SST_controller];
    required int32  timestamp = 2;// 请求时间戳
    required string identity = 3;// SST_controller 开发者AccessKey,SST_device 设备标识
}
message BaseResponse {
    required int32  timestamp = 1;
    required SrErrorCode ErrCode = 2;// 错误码
    optional string ErrMsg = 3;// 错误信息
}
message BasePush { 
}

enum SrSignatureMethod { 
    SSM_hmac_sha1 = 1;
}

// 会话授权 ，控制端接入（Open平台）需要
message AuthRequest {
    required BaseRequest BaseRequest = 1;
    optional SrSignatureMethod SignatureMethod = 2 [default = SSM_hmac_sha1];
    required string SignatureNonce = 3;// 验证用，随机字符串
    required string Signature = 4;// 签名
}
message AuthResponse {
    required BaseResponse BaseResponse = 1;
    required bytes AesSessionKey = 2;// 数据包体在通信期间需要用Aes加密，秘钥为AesSessionKey，返回的Key由Aes加密，秘钥AccessSecret
    required int32 expireSecond = 3;// 有效时间（秒数）
}
// 申请链接，
message ConnectDeviceRequest {
    required BaseRequest BaseRequest = 1;
    required string DeviceID = 2;
}
// 连接设备resp
message ConnectDeviceResponse {
    required BaseResponse BaseResponse = 1;
    required string DeviceResourceID = 2;// 会话级别的设备资源ID
}

message SendDataRequest {
    required BaseRequest BaseRequest = 1;
    required string DeviceResourceID = 2;
    required bytes Data = 3;
}

message SendDataResponse {
    required BaseResponse BaseResponse = 1;
    optional bytes Data = 2;
}

// 设备push数据到控制器 ===================================================
message RecvDataPush {
    required BasePush BasePush = 1;
    required string DeviceResourceID = 2;
    required string Distinct = 3;// 目标
    required bytes Data = 4;
}

// ====================================================
// 播放气味
message PlaySmell {
    required SrPlayMode mode = 1 [default = SOM_relative];// 播放模式
    required bytes smell = 2;// 播放的气味
    required int32 start = 3 ;//相对模式，表示多少秒后开始； 绝对模式，表示开始的时间戳
    optional int32 duration = 4;//播放时间，单位秒
    optional string end = 5;// 
    required bytes circulation = 6;// 是否循环,00不循环,01循环，10无限循环
    optional int32 cycleTime= 7;// 循环次数
}

// 播放气味请求
message PlayRequest {
    required BaseRequest BaseRequest = 1;
    required string DeviceResourceID = 2; // 目标设备
    required string cmdSeq = 3 ; // 指令序列号
    required PlaySmell play = 4; // 指令内容
}
// ====================================================


// 气味播放模式
enum SrPlayMode
{
    SOM_relative = 1; // 相对时间模式
    SOM_absolute = 2 ; // 绝对时间模式
}
// 无参数指令
message SrSystemRequest
{
    required BaseRequest BaseRequest = 1;
    required string DeviceResourceID = 3;
}